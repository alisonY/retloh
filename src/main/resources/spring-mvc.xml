<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans" 
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:context="http://www.springframework.org/schema/context" 

	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.2.xsd 
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
	"
>
   
    <!--对web包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->  
	<context:component-scan base-package="com.retloh.controller" />
	<context:component-scan base-package="com.retloh.service" />
	
	<!-- 处理请求返回json字符串的中文乱码问题 -->
    <mvc:annotation-driven>
         <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                        <value>*/*</value>
                    </list>
                </property>
                <property name="writeAcceptCharset" value="false" />
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
	
	<!-- 此处使用spring引用的json转换，MappingJackson2HttpMessageConverter中使用了com.fasterxml.jackson 修改时可以去掉POM中的无用引用 -->
	<!-- 上面使用了 <mvc:annotation-driven/>  spring 自动注册 RequestMappingHandlerMapping和RequestMappingHandlerAdapter。
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>
	-->


	
<!-- 	
	 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean class="com.retloh.framework.interceptor.OncePerRequestInterceptor"/>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/main/**"/>
			<mvc:mapping path="/muser/**"/>
			<mvc:mapping path="/bp/**"/>
			<mvc:mapping path="/case/**"/>
			<mvc:mapping path="/common/**"/>
			<mvc:mapping path="/down/**"/>
			<mvc:mapping path="/statistics/**"/>
			<mvc:mapping path="/user/**"/>
			<mvc:mapping path="/group/**"/>
			<bean class="com.retloh.framework.interceptor.UserLogininAuthorizationInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>



    <!-- 针对freemarker的视图配置 -->  
    <bean  id="viewResolver"  
        class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="viewClass" value="com.retloh.framework.RichFreeMarkerView" />
        <property name="cache" value="false" />
        <property name="prefix" value="" />
        <property name="suffix" value=".ftl" />
        <property name="contentType" value="text/html;charset=UTF-8"></property>
        <property name="requestContextAttribute" value="request" />
        <property name="exposeSpringMacroHelpers" value="true" />
        <property name="exposeRequestAttributes" value="true" />
        <property name="exposeSessionAttributes" value="true" />
    </bean>
    
    <!-- freemarkerz视图模板配置  -->
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">  
            <property name="templateLoaderPath" value="/WEB-INF/template/" /><!-- 放在web-info下 内部安全访问 -->
            <property name="freemarkerSettings">  
                <props>
                	<!-- 参数含义参考  http://blog.drizzt.cn/2016/03/20/freemarker-detail.html -->
                    <prop key="template_update_delay">0</prop>
                    <prop key="default_encoding">UTF-8</prop>
                    <prop key="locale">zh_CN</prop>
                    <!-- 控制模板本地化查找是否可用，比如locale设置为zh_CN加载模板foo.ftl时，freemarker自动查找foo_zh_CN.ftl,foo_zh.ftl,foo.ftl并返回找到的第一个  默认值为true-->
                    <prop key="localized_lookup">false</prop>
                    <prop key="classic_compatible">true</prop>
                    <prop key="template_exception_handler">ignore</prop>
                    <prop key="number_format">0.##########</prop>
                    
                    <!-- 在所有模板中自动引入指定模板 
                    <prop key="auto_import">/spring.ftl as s</prop>-->
                    <!-- <prop key="number_format">0.##########</prop> -->
                    <!-- <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop> -->
                </props>  
            </property>  
    </bean>   



	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<value>10485760</value><!-- 10M -->
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>
	
	<!-- 石英计划   未启用-->
	
	<!-- For times when you just need to invoke a method on a specific object -->
    <!--<bean id="simpleJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="myBean" />
        <property name="targetMethod" value="printMessage" />
    </bean>-->
	
	<!-- For times when you need more complex processing, passing data to the scheduled job -->
	<!--<bean name="complexJobDetail"    class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
    	<property name="jobClass" value="com.retloh.quartz.ScheduledJob" />
    	<property name="durability" value="true" />
	</bean>-->
	
	<!-- Run the job every 2 seconds with initial delay of 1 second -->
    <!--<bean id="simpleTrigger"  class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="jobDetail" ref="simpleJobDetail" />
        <property name="startDelay" value="1000" />
        <property name="repeatInterval" value="2000" />
    </bean>-->
	
	<!-- Run the job every 5 seconds only on Weekends -->
    <!--<bean id="cronTrigger"  class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="complexJobDetail" />
        <property name="cronExpression" value="0/5 * * ? * SAT-SUN" />
    </bean>-->
 
    <!-- Scheduler factory bean to glue together jobDetails and triggers to Configure Quartz Scheduler -->
    <!--<bean  id="myScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="jobDetails">
            <list>
                <ref bean="complexJobDetail" />
            </list>
        </property>
        <property name="triggers">
            <list>
                <ref bean="cronTrigger" />
            </list>
        </property>
    </bean>-->

</beans>